const express = require('express');
const multer = require('multer');
const fs = require('fs');
const htmlToDocx = require('html-docx-js');
const app = express();
const port = 3000;

app.get("/",(req,res)=>{
        res.sendFile(__dirname+"/body.html");
    }
    )

// Configure multer to store uploaded files in a specific directory
const storage = multer.diskStorage({
    destination: (req, file, cb) => {
        cb(null, './history'); // Change this path to the desired directory
    },
    filename: (req, file, cb) => {
        cb(null, file.originalname);
    },
});

const upload = multer({ storage });

// Rest of your code...

app.post('/convert', upload.single('htmlFile'), (req, res) => {
    if (!req.file) {
        return res.status(400).send('No file was uploaded.');
    }

    // Process the uploaded file
    const htmlContent = req.file.buffer.toString('utf-8');

    // Rest of your conversion code...
    const docx = htmlToDocx.asBlob(htmlContent);
    fs.writeFileSync('converted.docx', docx);

    res.download('converted.docx', 'converted.docx', (err) => {
        if (err) {
            console.error(err);
            res.status(500).send('Error downloading the converted file.');
        } else {
            // Clean up: Delete the temporary DOCX file
            fs.unlinkSync('converted.docx');
        }
    });
});

// Rest of your code...

    // Convert HTML to DOCX
    // const docx = htmlToDocx.asBlob(htmlContent);

    // Save the DOCX file
    // fs.writeFileSync('converted.docx', docx);

    // res.download('converted.docx', 'converted.docx', (err) => {
    //     if (err) {
    //         console.error(err);
    //         res.status(500).send('Error downloading the converted file.');
    //     } else {
    //         // Clean up: Delete the temporary DOCX file
    //         fs.unlinkSync('converted.docx');
    //     }
    // });

app.listen(port, () => {
    console.log(Server is running on http://localhost:${port});
});